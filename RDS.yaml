AWSTemplateFormatVersion: '2010-09-09'

Parameters:

  DBInstanceIdentifier:
    Type: String
    Description: Name of the DB Instance.

  DBPassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String

Conditions:
  
  Is-EC2-VPC: !Or [!Equals [!Ref 'AWS::Region', eu-central-1], !Equals [!Ref 'AWS::Region',
      cn-north-1]]
  Is-EC2-Classic: !Not [{Condition: Is-EC2-VPC}]

Resources:

  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: Is-EC2-VPC
    Properties:
      GroupDescription: Open database for access
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
        
  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Condition: Is-EC2-Classic
    Properties:
      DBSecurityGroupIngress:
        CIDRIP: 0.0.0.0/0
        
      GroupDescription: database access

  MasterDB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t3.small
      DBInstanceIdentifier: !Ref 'DBInstanceIdentifier'
      Engine: MySQL
      EngineVersion: 5.6.46
      MasterUsername: admin
      MasterUserPassword: !Ref 'DBPassword'
      MultiAZ: false
      PubliclyAccessible: false
      VPCSecurityGroups: !If [Is-EC2-VPC, [!GetAtt [DBEC2SecurityGroup, GroupId]],
        !Ref 'AWS::NoValue']
      DBSecurityGroups: !If [Is-EC2-Classic, [!Ref 'DBSecurityGroup'], !Ref 'AWS::NoValue']
    DeletionPolicy: Snapshot

Outputs:
  EndpointAddress:
    Description: Endpoint Address of the RDS Instance
    Value: !GetAtt MasterDB.Endpoint.Address
